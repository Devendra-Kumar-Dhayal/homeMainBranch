// Get the search input element
const search = document.querySelector('.search');
const container = document.querySelector('.container')

// Define the animation properties
const searchanim = anime({
  targets: search,
  translateX: '50px', // Move the input field 100 pixels to the left
  duration: 2000, // Animation duration in milliseconds 
  autoplay: false, // Animation won't start automatically
  width: '600px' // Change the width to 35 pixels
});

const containeranim = anime({
    targets: container,

})
// Start the animation when the page loads
window.addEventListener("load", () => {
    searchanim.play();
});






































const wrapper = document.getElementsByClassName("tiles");

let columns = 0,
    rows = 0,
    toggled = false;

const toggle = () => {
  toggled = !toggled;
  
  document.body.classList.toggle("toggled");
}

const handleOnClick = index => {
  toggle();
  
  anime({
    targets: ".tile",
    opacity: toggled ? 0 : 1,
    delay: anime.stagger(50, {
      grid: [columns, rows],
      from: index
    })
  });
}

const createTile = index => {
  const tile = document.createElement("div");
  
  tile.classList.add("tile");
  
  tile.style.opacity = toggled ? 0 : 1;
  
  tile.onclick = e => handleOnClick(index);
  
  return tile;
}

const createTiles = quantity => {
  Array.from(Array(quantity)).map((tile, index) => {
    wrapper.appendChild(createTile(index));
  });
}

const createGrid = () => {
  wrapper.innerHTML = "";
  
  const size = document.body.clientWidth > 800 ? 100 : 50;
  
  columns = Math.floor(document.body.clientWidth / size);
  rows = Math.floor(document.body.clientHeight / size);
  
  wrapper.style.setProperty("--columns", columns);
  wrapper.style.setProperty("--rows", rows);
  
  createTiles(columns * rows);
}

createGrid();

window.onresize = () => createGrid();




















:root {
  --background: #d3d3d3;
  --primary: #ffffff;
  --accent-color: #009ffd;
  --sec: linear-gradient(315deg, #2a2a72 10%, #009ffd 100%);
}

.container {
  display: flex;
  justify-content: center;
  margin-top: 5%;
  flex-wrap: nwrap;
}

::-webkit-scrollbar {
  display: none;
}

body {
  background-image: linear-gradient(to right top, #ef7eff, #af96ff, #69a6ff, #1daefc, #00b0e0);
  background-size: 400% 400%;
  animation: gradient 10s linear infinite;
  height: 100vh;
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

div {
  border-radius: 15px;
}

.leaderboard {
  background: rgba(255, 255, 255, 0.11);
  border-radius: 16px; /* Adjust this value as needed */
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(4.6px);
  -webkit-backdrop-filter: blur(4.6px);
  border: 1px solid rgba(255, 255, 255, 0.4);
  align-items: center;
  justify-content: center;
  margin-left: 4%;
  height: 888px;
  width: 20%;
  text-align: center;
  transition: background-color 0.2s ease;
}

.leaderboard:hover{
  background-color: rgba(255, 255, 255, 0.5);
}


.feed {
  animation: gradient 15s ease infinite;
  margin-left: 2%;
  margin-right: 2%;
  height: 88%;
  width: 40%;
}

.create,
.sort,
.post {
  background: rgba(255, 255, 255, 0.11);
  border-radius: 16px; /* Adjust this value as needed */
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(4.6px);
  -webkit-backdrop-filter: blur(4.6px);
  border: 1px solid rgba(255, 255, 255, 0.4);
  height: 5em;
  width: 100%;
}

.create {
  display: flex;
  align-items: center;
}

/* .circle {
  background: rgba(255, 255, 255, 0.30);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  margin-left: 10px;
} */

#cpost {
  transform: scale(1.7);
  margin-top: 11px;
}

.title {
  background: rgba(255, 255, 255, 0.11);
  border-radius: 16px; /* Adjust this value as needed */
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(4.6px);
  -webkit-backdrop-filter: blur(4.6px);
  border: 1px solid rgba(255, 255, 255, 0.4);
  margin-left: 25px;
  border-radius: 20px;
  height: 2.5em;
  width: 85%;
}

.title:active {
  border: 1px solid;
}

#spost {
  margin-right: -75px;
  margin-bottom: 10px;
}

.sort {
  margin-top: 15px;
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.post {
  height: 39em;
  margin-top: 15px;
}

.trending {
  background: rgba(255, 255, 255, 0.11);
  border-radius: 16px; /* Adjust this value as needed */
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(4.6px);
  -webkit-backdrop-filter: blur(4.6px);
  border: 1px solid rgba(255, 255, 255, 0.4);
  display: flex;
  justify-content: center;
  margin-right: 4%;
  height: 888px;
  width: 20%;
  text-align: center;
  transition: background-color 0.2s ease;
}

.trending:hover{
  background-color: rgba(255, 255, 255, 0.5);
}

h1 {
  display: inline-block;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  color: var(--accent-color);
  padding: 0;
}

.lead {
  font-family: Arial, Helvetica, sans-serif;
}

.search {
  background: url("C:/Users/Noct/Downloads/edit.png") no-repeat;
  background-position: 22px;
  background-size: 25px;
  border-radius: 16px; /* Adjust this value as needed */
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(4.6px);
  -webkit-backdrop-filter: blur(4.6px);
  border: 1px solid rgba(255, 255, 255, 0.4);
  border-radius: 50px;
  height: 2.0em;
  width: 5%;
  font-family: Arial, Helvetica, sans-serif;
  color: black;
  outline-color: rgba(255, 255, 255, 0.1);
  margin-left: 18px;
  font-size: 20px;
  text-align: center;
}
nav{
  margin-left: 150px;
}

.cta {
  font-family: "Montserrat", sans-serif;
  font-weight: 500;
  color: #edf0f1;
  text-decoration: none;
}

.cta {
  padding: 9px 25px;
  background: rgba(255, 255, 255, 0.0);
  border: none;
  border-radius: 50px;
  cursor: pointer;
  transition: background-color 0.3s ease 0s;
}

.cta:hover {
  background-color: rgba(255, 255, 255, 0.11);
}

.highlight {
  background-color: yellow;
}





























<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="styles.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
    <script src="app.js" async defer></script>
  </head>
  <body>
  <div class="tiles">
    <div class="container">
      <div class="leaderboard">
        <h1 class="lead">Leaderboard</h1>
      </div>
      <div class="feed">
        <div class="create">
            <input class="search" type="text" placeholder="" size="56">
        </div>
        <div class="sort">
          <header>
            <nav>
              <button class="cta">New</button>
              <button class="cta">Top</button>
              <button class="cta">Trending</button>
              <button class="cta">Rising</button>
              <button class="cta">Hot</button>
            </nav>
        </header>
        </div>
        <div class="post"></div>
      </div>
      <div class="trending">
        <h1 class="lead">Trending</h1>
      </div>
    </div>
  </div>
  </body>
</html>


